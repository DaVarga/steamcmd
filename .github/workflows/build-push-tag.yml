name: Reusable workflow for building and pushing images

on:
  workflow_call:
    inputs:
      push:
        required: true
        type: boolean
      tag:
        required: true
        type: boolean


env:
  DOCKER_BUILDKIT: 1
  REGISTRY_IMAGE: "${{ github.repository_owner }}/${{ github.event.repository.name }}"
  GHCR_PREFIX: "ghcr.io"
  DOCKER_HUB_PREFIX: "docker.io"
  DOCKER_IMAGE_BASE_ORDER: "base srcds hlds"

jobs:
  build-scan-push-tag:
    runs-on: ubuntu-22.04
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v3
        if: ${{ inputs.push }}

      - name: Build all images
        if: ${{ inputs.push }}
        run: |
          for docker_base_image_type in ${DOCKER_IMAGE_BASE_ORDER}; do
            docker-compose build ${docker_base_image_type}
          done

      - name: Log in to GHCR
        if: ${{ inputs.push || inputs.tag }}
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Login to Docker Hub
        if: ${{ inputs.push || inputs.tag }}
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_ACCESS }}

      - name: Push latest images to registries
        if: ${{ inputs.push }}
        run: |
          docker_image_types=$(docker-compose config --services | paste -sd " " -)

          for docker_image_type in ${docker_image_types}; do
            docker tag ${REGISTRY_IMAGE}:${docker_image_type} ${GHCR_PREFIX}/${REGISTRY_IMAGE}:${docker_image_type}-latest
            docker tag ${REGISTRY_IMAGE}:${docker_image_type} ${DOCKER_HUB_PREFIX}/${REGISTRY_IMAGE}:${docker_image_type}-latest

            docker push ${GHCR_PREFIX}/${REGISTRY_IMAGE}:${docker_image_type}-latest
            docker push ${DOCKER_HUB_PREFIX}/${REGISTRY_IMAGE}:${docker_image_type}-latest
          done

      - name: Push tagged images to registries
        if: ${{ inputs.tag }}
        run: |
          for docker_base_image_type in ${DOCKER_IMAGE_BASE_ORDER}; do
            docker pull ${GHCR_PREFIX}/${REGISTRY_IMAGE}:${docker_base_image_type}-latest

            docker tag ${GHCR_PREFIX}/${REGISTRY_IMAGE}:${docker_base_image_type}-latest ${GHCR_PREFIX}/${REGISTRY_IMAGE}:${docker_base_image_type}-${{ github.ref_name }}
            docker tag ${GHCR_PREFIX}/${REGISTRY_IMAGE}:${docker_base_image_type}-latest ${DOCKER_HUB_PREFIX}/${REGISTRY_IMAGE}:${docker_base_image_type}-${{ github.ref_name }}

            docker push ${GHCR_PREFIX}/${REGISTRY_IMAGE}:${docker_base_image_type}-${{ github.ref_name }}
            docker push ${DOCKER_HUB_PREFIX}/${REGISTRY_IMAGE}:${docker_base_image_type}-${{ github.ref_name }}
          done
