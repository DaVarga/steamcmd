name: Docker build and publish latest

on:
  push:
    branches:
      - main

env:
  DOCKER_BUILDKIT: 1
  REGISTRY_IMAGE: "${{ github.repository_owner }}/${{ github.event.repository.name }}"
  GHCR_PREFIX: "ghcr.io"
  DOCKER_HUB_PREFIX: "docker.io"
  DOCKER_IMAGE_BASE_ORDER: "base srcds hlds"
  DOCKER_RETAG_SH: ".github/scripts/docker_retag.sh"

jobs:
  build:
    runs-on: ubuntu-22.04
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v3

      - name: Build all images
        run: |
          docker_image_types="${DOCKER_IMAGE_BASE_ORDER} $(ls image/games/hlds) $(ls image/games/srcds)"

          for docker_image_type in ${docker_image_types}; do
            docker-compose build ${docker_image_type}
          done

      - name: Trivy CVE scan - base
        uses: aquasecurity/trivy-action@0.4.0
        with:
          image-ref: "${{ env.REGISTRY_IMAGE }}:base"
          format: 'table'
          exit-code: '1'
          severity: 'CRITICAL,HIGH,MEDIUM,LOW'

      - name: Trivy CVE scan - srcds
        uses: aquasecurity/trivy-action@0.4.0
        with:
          image-ref: "${{ env.REGISTRY_IMAGE }}:srcds"
          format: 'table'
          exit-code: '1'
          severity: 'CRITICAL,HIGH,MEDIUM,LOW'

      - name: Trivy CVE scan - hlds
        uses: aquasecurity/trivy-action@0.4.0
        with:
          image-ref: "${{ env.REGISTRY_IMAGE }}:hlds"
          format: 'table'
          exit-code: '1'
          severity: 'CRITICAL,HIGH,MEDIUM,LOW'

      - name: Trivy CVE scan - games/hlds/cs
        uses: aquasecurity/trivy-action@0.4.0
        with:
          image-ref: "${{ env.REGISTRY_IMAGE }}:cs"
          format: 'table'
          exit-code: '1'
          severity: 'CRITICAL,HIGH,MEDIUM,LOW'

      - name: Trivy CVE scan - games/srcds/bms
        uses: aquasecurity/trivy-action@0.4.0
        with:
          image-ref: "${{ env.REGISTRY_IMAGE }}:bms"
          format: 'table'
          exit-code: '1'
          severity: 'CRITICAL,HIGH,MEDIUM,LOW'

      - name: Trivy CVE scan - games/srcds/csgo
        uses: aquasecurity/trivy-action@0.4.0
        with:
          image-ref: "${{ env.REGISTRY_IMAGE }}:csgo"
          format: 'table'
          exit-code: '1'
          severity: 'CRITICAL,HIGH,MEDIUM,LOW'

      - name: Trivy CVE scan - games/srcds/css
        uses: aquasecurity/trivy-action@0.4.0
        with:
          image-ref: "${{ env.REGISTRY_IMAGE }}:css"
          format: 'table'
          exit-code: '1'
          severity: 'CRITICAL,HIGH,MEDIUM,LOW'

      - name: Trivy CVE scan - games/srcds/dods
        uses: aquasecurity/trivy-action@0.4.0
        with:
          image-ref: "${{ env.REGISTRY_IMAGE }}:dods"
          format: 'table'
          exit-code: '1'
          severity: 'CRITICAL,HIGH,MEDIUM,LOW'

      - name: Trivy CVE scan - games/srcds/gm
        uses: aquasecurity/trivy-action@0.4.0
        with:
          image-ref: "${{ env.REGISTRY_IMAGE }}:gm"
          format: 'table'
          exit-code: '1'
          severity: 'CRITICAL,HIGH,MEDIUM,LOW'

      - name: Trivy CVE scan - games/srcds/hl2mp
        uses: aquasecurity/trivy-action@0.4.0
        with:
          image-ref: "${{ env.REGISTRY_IMAGE }}:hl2mp"
          format: 'table'
          exit-code: '1'
          severity: 'CRITICAL,HIGH,MEDIUM,LOW'

      - name: Trivy CVE scan - games/srcds/l4d
        uses: aquasecurity/trivy-action@0.4.0
        with:
          image-ref: "${{ env.REGISTRY_IMAGE }}:l4d"
          format: 'table'
          exit-code: '1'
          severity: 'CRITICAL,HIGH,MEDIUM,LOW'

      - name: Trivy CVE scan - games/srcds/l4d2
        uses: aquasecurity/trivy-action@0.4.0
        with:
          image-ref: "${{ env.REGISTRY_IMAGE }}:l4d2"
          format: 'table'
          exit-code: '1'
          severity: 'CRITICAL,HIGH,MEDIUM,LOW'

      - name: Log in to GHCR
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKERHUB_ACCESS }}" | docker login docker.io -u ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin

      - name: Push latest images to registries
        run: |
          docker_image_types="${DOCKER_IMAGE_BASE_ORDER} $(ls image/games/hlds) $(ls image/games/srcds)"

          for docker_image_type in ${docker_image_types}; do
            docker tag ${REGISTRY_IMAGE}:${docker_image_type} ${GHCR_PREFIX}/${REGISTRY_IMAGE}:${docker_image_type}-latest
            docker push ${GHCR_PREFIX}/${REGISTRY_IMAGE}:${docker_image_type}-latest

            docker tag ${REGISTRY_IMAGE}:${docker_image_type} ${DOCKER_HUB_PREFIX}/${REGISTRY_IMAGE}:${docker_image_type}-latest
            docker push ${DOCKER_HUB_PREFIX}/${REGISTRY_IMAGE}:${docker_image_type}-latest
          done
